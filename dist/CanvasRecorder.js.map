{"version":3,"file":"CanvasRecorder.js","sources":["../node_modules/@tawaship/emitter/dist/Emitter.esm.js","../src/modules/CanvasRecorder.ts"],"sourcesContent":["/*!\n * @tawaship/emitter - v3.0.0\n * \n * @author tawaship (makazu.mori@gmail.com)\n * @license MIT\n */\n\nclass Emitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * Registered event names.\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    get eventNames() {\r\n        return Object.keys(this._events);\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param func Callback when the event fires.\r\n     * @param once Whether one-time event.\r\n     * @return Returns itself for the method chaining.\r\n     */\r\n    _on(type, func, once) {\r\n        if (!type || !func) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].func === func) {\r\n                return this;\r\n            }\r\n        }\r\n        events.push({ func, once });\r\n        return this;\r\n    }\r\n    /**\r\n     * Register event.\r\n     *\r\n     * @param type Event type.\r\n     * @param func Callback when the event fires.\r\n     * @return Returns itself for the method chaining.\r\n     */\r\n    on(type, func) {\r\n        return this._on(type, func, false);\r\n    }\r\n    /**\r\n     * Register one-time event.\r\n     *\r\n     * @param type Event type.\r\n     * @param func Callback when the event fires.\r\n     * @return Returns itself for the method chaining.\r\n     */\r\n    once(type, func) {\r\n        return this._on(type, func, true);\r\n    }\r\n    /**\r\n     * Unregister event.\r\n     *\r\n     * @param type Event type.\r\n     * @param func Registered callback.\r\n     * @return Returns itself for the method chaining.\r\n     */\r\n    off(type, func) {\r\n        if (!type || !func) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        for (let i = 0; i < events.length; i++) {\r\n            if (events[i].func === func) {\r\n                events.splice(i, 1);\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param args Argument(s) in callback.\r\n     * @return Returns itself for the method chaining.\r\n     */\r\n    emit(type, ...args) {\r\n        if (!type) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const use = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const ev = events[i];\r\n            if (ev.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            use.push(ev);\r\n        }\r\n        for (let i = use.length - 1; i >= 0; i--) {\r\n            use[i].func.apply(this, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Emit event with specifying a context.\r\n     *\r\n     * @param type Event type to emit.\r\n     * @param context 'this' context in callback.\r\n     * @param args Argument(s) in callback.\r\n     * @return Returns itself for the method chaining.\r\n     */\r\n    cemit(type, context, ...args) {\r\n        if (!type || context == null) {\r\n            return this;\r\n        }\r\n        const events = this._events[type] || [];\r\n        const use = [];\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            const ev = events[i];\r\n            if (ev.once) {\r\n                events.splice(i, 1);\r\n            }\r\n            use.push(ev);\r\n        }\r\n        for (let i = use.length - 1; i >= 0; i--) {\r\n            use[i].func.apply(context, args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Remove events grouped event type.\r\n     *\r\n     * @param type Event type to remove.<br>If it is empty, removes all events.\r\n     * @return Returns itself for the method chaining.\r\n     */\r\n    clear(type = '') {\r\n        if (type) {\r\n            delete (this._events[type]);\r\n        }\r\n        else {\r\n            this._events = {};\r\n        }\r\n        return this;\r\n    }\r\n}\n\nexport { Emitter };\n//# sourceMappingURL=Emitter.esm.js.map\n","import { Emitter } from '@tawaship/emitter';\r\n\r\n/**\r\n * @ignore\r\n */\r\ndeclare class MediaRecorder {\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tconstructor(...args: any[]);\r\n\t\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\t[props: string]: any;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\ndeclare interface MediaRecordOptions {\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\t[props: string]: any;\r\n};\r\n\r\n/**\r\n * @ignore\r\n */\r\ndeclare type HTMLCanvasElement = any;\r\n\r\n/**\r\n * [[https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#Properties]]\r\n */\r\nexport interface AudioOptions {\r\n\tuser?: boolean | MediaTrackConstraints;\r\n\tdisplay?: boolean | MediaTrackConstraints;\r\n}\r\n\r\ninterface A {\r\n\ta:number;\r\n}\r\n/**\r\n * @private\r\n */\r\nconst defaultUserAudioTrackConstraints: MediaTrackConstraints = { channelCount: 2 } as MediaTrackConstraints;\r\n\r\n/**\r\n * @private\r\n */\r\nconst defaultDisplayAudioTrackConstraints: MediaTrackConstraints = { channelCount: 2 } as MediaTrackConstraints;\r\n\r\n/**\r\n * @ignore\r\n */\r\ndeclare const navigator: any;\r\n\r\n/**\r\n * @private\r\n */\r\nclass Movie {\r\n\tprivate _blobURL: string;\r\n\t\r\n\tconstructor(blob: Blob) {\r\n\t\tthis._blobURL = window.URL.createObjectURL(blob);\r\n\t}\r\n\t\r\n\tcreateVideoElement() {\r\n\t\tif (!this._blobURL) {\r\n\t\t\tthrow new Error('[CanvasRecorder] This movie instance was destroyed.');\r\n\t\t}\r\n\t\t\r\n\t\tconst video = document.createElement('video');\r\n\t\tvideo.src = this._blobURL;\r\n\t\tvideo.setAttribute('controls', '');\r\n\t\treturn video;\r\n\t}\r\n\t\r\n\tdownload(filename?: string) {\r\n\t\tif (!this._blobURL) {\r\n\t\t\tthrow new Error('[CanvasRecorder] This movie instance was destroyed.');\r\n\t\t}\r\n\t\t\r\n\t\tconst anchor = document.createElement('a');\r\n\t\tanchor.download = filename ? `${filename}.webm` : `${location.hostname}_${new Date().toLocaleString().replace(/[\\/\\s\\:]/g, '-')}.webm`;\r\n\t\tanchor.href = this._blobURL;\r\n\t\tanchor.click();\r\n\t}\r\n\t\r\n\tget blobURL() {\r\n\t\tif (!this._blobURL) {\r\n\t\t\tthrow new Error('[CanvasRecorder] This movie instance was destroyed.');\r\n\t\t}\r\n\t\t\r\n\t\treturn this._blobURL;\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\twindow.URL.revokeObjectURL(this._blobURL);\r\n\t\tthis._blobURL = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst DisplayStream = Symbol();\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst UserStream = Symbol();\r\n\r\n/*\r\n * This API reference does not contain information for the parent class \"MediaRecorder\".<br />\r\n * For more information on \"MediaRecorder\", please refer to the following URL.<br />\r\n * [[https://developer.mozilla.org/en/docs/Web/API/MediaRecorder]]\r\n */\r\nexport class CanvasRecorder {\r\n\t/**\r\n\t * [[https://developer.mozilla.org/en/docs/Web/API/MediaRecorder]]\r\n\t */\r\n\tprivate _recorder: MediaRecorder;\r\n\t\r\n\tprivate _buildPromise: Promise<Movie> = null;\r\n\t\r\n\tprivate _buildEmitter: Emitter = new Emitter();\r\n\t\r\n\tprivate _movie: Movie = null;\r\n\t\r\n\tprivate [DisplayStream]: MediaStream = null;\r\n\t\r\n\tprivate [UserStream]: MediaStream = null;\r\n\t\r\n\t/**\r\n\t * @param stream [[https://developer.mozilla.org/ja/docs/Web/API/MediaStream]]\r\n\t * @param recordOptions [[https://developer.mozilla.org/en/docs/Web/API/MediaRecorder/MediaRecorder#Syntax]]\r\n\t */\r\n\tconstructor(stream: MediaStream, recordOptions: MediaRecordOptions = {}) {\r\n\t\tlet blobList: Blob[] = [];\r\n\t\t\r\n\t\tthis._recorder = new MediaRecorder(stream, recordOptions);\r\n\t\t\r\n\t\tthis._recorder.addEventListener('dataavailable', e => {\r\n\t\t\tblobList.push(e.data);\r\n\t\t});\r\n\t\t\r\n\t\tthis._recorder.addEventListener('stop', e => {\r\n\t\t\tthis._buildEmitter.emit('finish', blobList);\r\n\t\t\tblobList = [];\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Start recording\r\n\t * @param timeslice [[https://developer.mozilla.org/en/docs/Web/API/MediaRecorder/start#Syntax]]\r\n\t */\r\n\tstart(timeslice: number) {\r\n\t\tif (this._recorder.state !== 'inactive') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.clearMovie();\r\n\t\t\r\n\t\tthis._buildPromise = new Promise(resolve => {\r\n\t\t\tthis._buildEmitter.once('finish', blobList => {\r\n\t\t\t\tconst movieBlob = new Blob(blobList, { type: blobList[0].type });\r\n\t\t\t\tthis._movie = new Movie(movieBlob);\r\n\t\t\t\tresolve(this._movie);\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tthis._recorder.start(timeslice);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Finish recording and create a video file.\r\n\t */\r\n\tfinishAsync() {\r\n\t\tif (this._recorder.state !== 'recording') {\r\n\t\t\treturn this._buildPromise;\r\n\t\t}\r\n\t\t\r\n\t\tthis._recorder.stop();\r\n\t\t\r\n\t\treturn this._buildPromise;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause recording.\r\n\t */\r\n\tpause() {\r\n\t\tif (this._recorder.state !== 'recording') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._recorder.pause();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Resume recording.\r\n\t */\r\n\tresume() {\r\n\t\tif (this._recorder.state !== 'paused') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._recorder.resume();\r\n\t}\r\n\t\r\n\tclearMovie() {\r\n\t\tif (this._movie) {\r\n\t\t\tthis._movie.destroy();\r\n\t\t\tthis._movie = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tdestroy() {\r\n\t\tthis.clearMovie();\r\n\t\tthis._recorder.stream.getTracks().forEach(track => track.stop());\r\n\t\t\r\n\t\tthis._releaseDisplayStream();\r\n\t\tthis._releaseUserStream();\r\n\t}\r\n\t\r\n\tprivate _releaseDisplayStream() {\r\n\t\tif (this[DisplayStream]) {\r\n\t\t\tthis[DisplayStream].getTracks().forEach(track => track.stop());\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _releaseUserStream() {\r\n\t\tif (this[UserStream]) {\r\n\t\t\tthis[UserStream].getTracks().forEach(track => track.stop());\r\n\t\t}\r\n\t}\r\n\t\r\n\tdisabled(flag: boolean) {\r\n\t\tthis._recorder.stream.getTracks().forEach(track => track.enabled = !flag);\r\n\t}\r\n\t\r\n\thide(flag: boolean) {\r\n\t\tthis._recorder.stream.getVideoTracks().forEach(track => track.enabled = !flag);\r\n\t}\r\n\t\r\n\tmute(flag: boolean) {\r\n\t\tthis._recorder.stream.getAudioTracks().forEach(track => track.enabled = !flag);\r\n\t}\r\n\t\r\n\taddAudioAsync(audioOptions: AudioOptions = { display: true }) {\r\n\t\tconst streams = [];\r\n\t\t\r\n\t\treturn Promise.resolve()\r\n\t\t\t.then(() => {\r\n\t\t\t\tif (!audioOptions.display) {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!navigator.mediaDevices || !navigator.mediaDevices.getDisplayMedia) {\r\n\t\t\t\t\treturn Promise.reject();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._releaseDisplayStream();\r\n\t\t\t\t\r\n\t\t\t\tconst displayTrackConstraints = audioOptions.display === true ? defaultUserAudioTrackConstraints : audioOptions.display;\r\n\t\t\t\treturn navigator.mediaDevices.getDisplayMedia({ audio: displayTrackConstraints, video: true })\r\n\t\t\t\t\t.then(stream => {\r\n\t\t\t\t\t\tthis[DisplayStream] = stream;\r\n\t\t\t\t\t\tstream.getVideoTracks().forEach(track => track.stop());\r\n\t\t\t\t\t\tstreams.push(stream);\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t\tconsole.warn('[CanvasRecorder] Can not use display media.');\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tif (!audioOptions.user) {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n\t\t\t\t\treturn Promise.reject();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._releaseUserStream();\r\n\t\t\t\t\r\n\t\t\t\tconst userTrackConstraints = audioOptions.user === true ? defaultUserAudioTrackConstraints : audioOptions.user;\r\n\t\t\t\treturn navigator.mediaDevices.getUserMedia({ audio: userTrackConstraints })\r\n\t\t\t\t\t.then(stream => {\r\n\t\t\t\t\t\tthis[UserStream] = stream;\r\n\t\t\t\t\t\tstream.getVideoTracks().forEach(track => track.stop());\r\n\t\t\t\t\t\tstreams.push(stream)\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t\tconsole.warn('[CanvasRecorder] Can not use user media.');\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tif (!streams.length) {\r\n\t\t\t\t\tconsole.warn('[CanvasRecorder] No audio stream.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst audioTrackNum = streams.reduce((total, stream) => {\r\n\t\t\t\t\treturn total + stream.getAudioTracks().length;\r\n\t\t\t\t}, 0);\r\n\t\t\t\t\r\n\t\t\t\tif (!audioTrackNum) {\r\n\t\t\t\t\tconsole.warn('[CanvasRecorder] No audio stream.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!AudioContext) {\r\n\t\t\t\t\tconsole.warn('[CanvasRecorder] Priority is given to \"display media\" as multiple audio tracks cannot be used.');\r\n\t\t\t\t\tstreams.forEach(stream => stream.getAudioTracks().forEach(track => this._recorder.stream.addTrack(track)));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst audioContext = new AudioContext();\r\n\t\t\t\tconst destination = audioContext.createMediaStreamDestination();\r\n\t\t\t\t\r\n\t\t\t\tstreams.forEach(stream => audioContext.createMediaStreamSource(stream).connect(destination));\r\n\t\t\t\tthis._recorder.stream.addTrack(destination.stream.getAudioTracks()[0]);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param canvas [[https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement]]\r\n\t * @param recordOptions [[https://developer.mozilla.org/en/docs/Web/API/MediaRecorder/MediaRecorder#Syntax]]\r\n\t */\r\n\tstatic create(canvas: HTMLCanvasElement, recordOptions: MediaRecordOptions = {}) {\r\n\t\tconst stream = new MediaStream();\r\n\t\t\r\n\t\tcanvas.captureStream().getVideoTracks().forEach(track => {\r\n\t\t\tstream.addTrack(track);\r\n\t\t});\r\n\t\t\r\n\t\treturn new CanvasRecorder(stream, recordOptions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param canvas [[https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement]]\r\n\t * @param recordOptions [[https://developer.mozilla.org/en/docs/Web/API/MediaRecorder/MediaRecorder#Syntax]]\r\n\t */\r\n\tstatic createWithAudioAsync(canvas: HTMLCanvasElement, audioOptions: AudioOptions = { display: true }, recordOptions: MediaRecordOptions = {}) {\r\n\t\tconst recorder = CanvasRecorder.create(canvas, recordOptions);\r\n\t\t\r\n\t\treturn recorder.addAudioAsync(audioOptions)\r\n\t\t\t.then(() => recorder);\r\n\t}\r\n}"],"names":["Emitter","this","_events","prototypeAccessors","eventNames","Object","keys","_on","type","func","once","const","events","i","length","push","on","off","splice","emit","use","ev","let","apply","args","cemit","context","clear","defaultUserAudioTrackConstraints","channelCount","Movie","blob","_blobURL","window","URL","createObjectURL","createVideoElement","Error","video","document","createElement","src","setAttribute","download","filename","anchor","location","Date","toLocaleString","replace","href","click","blobURL","destroy","revokeObjectURL","DisplayStream","Symbol","UserStream","CanvasRecorder","stream","recordOptions","blobList","_recorder","MediaRecorder","addEventListener","e","data","_buildEmitter","start","timeslice","state","clearMovie","_buildPromise","Promise","resolve","movieBlob","Blob","_movie","finishAsync","stop","pause","resume","getTracks","forEach","track","_releaseDisplayStream","_releaseUserStream","disabled","flag","enabled","hide","getVideoTracks","mute","getAudioTracks","addAudioAsync","audioOptions","display","streams","then","navigator","mediaDevices","getDisplayMedia","reject","displayTrackConstraints","audio","catch","console","error","warn","user","getUserMedia","userTrackConstraints","reduce","total","AudioContext","addTrack","audioContext","destination","createMediaStreamDestination","createMediaStreamSource","connect","create","canvas","MediaStream","captureStream","createWithAudioAsync","recorder"],"mappings":"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"}